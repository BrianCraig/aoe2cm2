// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Draft renders correctly 1`] = `
<div
  className="draft-content"
>
  <div
    className="centered text-primary info-card"
    id="draft-title"
  >
    Default Preset
  </div>
  <TurnRow
    turns={
      Array [
        Turn {
          "action": "GLOBAL_BAN",
          "player": "HOST",
        },
        Turn {
          "action": "GLOBAL_BAN",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_BAN",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_BAN",
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_BANS",
          "player": "NONE",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_PICK",
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_PICKS",
          "player": "NONE",
        },
        Turn {
          "action": "HIDDEN_SNIPE",
          "player": "HOST",
        },
        Turn {
          "action": "HIDDEN_SNIPE",
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_ALL",
          "player": "NONE",
        },
      ]
    }
  />
  <Players
    nameGuest="Beastly Barbarossa"
    nameHost="Sneaky Saladin"
    preset={
      Preset {
        "civilisations": Array [
          Civilisation {
            "gameVersion": 1,
            "name": "Britons",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Byzantines",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Celts",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Chinese",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Franks",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Goths",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Japanese",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Mongols",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Persians",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Saracens",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Teutons",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Turks",
          },
          Civilisation {
            "gameVersion": 1,
            "name": "Vikings",
          },
          Civilisation {
            "gameVersion": 2,
            "name": "Aztecs",
          },
          Civilisation {
            "gameVersion": 2,
            "name": "Huns",
          },
          Civilisation {
            "gameVersion": 2,
            "name": "Koreans",
          },
          Civilisation {
            "gameVersion": 2,
            "name": "Mayans",
          },
          Civilisation {
            "gameVersion": 2,
            "name": "Spanish",
          },
          Civilisation {
            "gameVersion": 3,
            "name": "Italians",
          },
          Civilisation {
            "gameVersion": 3,
            "name": "Incas",
          },
          Civilisation {
            "gameVersion": 3,
            "name": "Indians",
          },
          Civilisation {
            "gameVersion": 3,
            "name": "Magyars",
          },
          Civilisation {
            "gameVersion": 3,
            "name": "Slavs",
          },
          Civilisation {
            "gameVersion": 4,
            "name": "Berbers",
          },
          Civilisation {
            "gameVersion": 4,
            "name": "Ethiopians",
          },
          Civilisation {
            "gameVersion": 4,
            "name": "Malians",
          },
          Civilisation {
            "gameVersion": 4,
            "name": "Portuguese",
          },
          Civilisation {
            "gameVersion": 5,
            "name": "Burmese",
          },
          Civilisation {
            "gameVersion": 5,
            "name": "Khmer",
          },
          Civilisation {
            "gameVersion": 5,
            "name": "Malay",
          },
          Civilisation {
            "gameVersion": 5,
            "name": "Vietnamese",
          },
        ],
        "name": "Default Preset",
        "turns": Array [
          Turn {
            "action": "GLOBAL_BAN",
            "player": "HOST",
          },
          Turn {
            "action": "GLOBAL_BAN",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_BAN",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_BAN",
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_BANS",
            "player": "NONE",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_PICK",
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_PICKS",
            "player": "NONE",
          },
          Turn {
            "action": "HIDDEN_SNIPE",
            "player": "HOST",
          },
          Turn {
            "action": "HIDDEN_SNIPE",
            "player": "GUEST",
          },
          Turn {
            "action": "REVEAL_ALL",
            "player": "NONE",
          },
        ],
      }
    }
  />
  <Connect(Messages) />
  <CivGrid
    civilisations={
      Array [
        Civilisation {
          "gameVersion": 1,
          "name": "Britons",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Byzantines",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Celts",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Chinese",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Franks",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Goths",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Japanese",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Mongols",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Persians",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Saracens",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Teutons",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Turks",
        },
        Civilisation {
          "gameVersion": 1,
          "name": "Vikings",
        },
        Civilisation {
          "gameVersion": 2,
          "name": "Aztecs",
        },
        Civilisation {
          "gameVersion": 2,
          "name": "Huns",
        },
        Civilisation {
          "gameVersion": 2,
          "name": "Koreans",
        },
        Civilisation {
          "gameVersion": 2,
          "name": "Mayans",
        },
        Civilisation {
          "gameVersion": 2,
          "name": "Spanish",
        },
        Civilisation {
          "gameVersion": 3,
          "name": "Italians",
        },
        Civilisation {
          "gameVersion": 3,
          "name": "Incas",
        },
        Civilisation {
          "gameVersion": 3,
          "name": "Indians",
        },
        Civilisation {
          "gameVersion": 3,
          "name": "Magyars",
        },
        Civilisation {
          "gameVersion": 3,
          "name": "Slavs",
        },
        Civilisation {
          "gameVersion": 4,
          "name": "Berbers",
        },
        Civilisation {
          "gameVersion": 4,
          "name": "Ethiopians",
        },
        Civilisation {
          "gameVersion": 4,
          "name": "Malians",
        },
        Civilisation {
          "gameVersion": 4,
          "name": "Portuguese",
        },
        Civilisation {
          "gameVersion": 5,
          "name": "Burmese",
        },
        Civilisation {
          "gameVersion": 5,
          "name": "Khmer",
        },
        Civilisation {
          "gameVersion": 5,
          "name": "Malay",
        },
        Civilisation {
          "gameVersion": 5,
          "name": "Vietnamese",
        },
      ]
    }
    socket={
      Socket {
        "_callbacks": Object {
          "$connect": Array [
            [Function],
          ],
          "$connecting": Array [
            [Function],
          ],
          "$playerEvent": Array [
            [Function],
          ],
          "$player_joined": Array [
            [Function],
          ],
        },
        "acks": Object {
          "0": [Function],
        },
        "connected": false,
        "disconnected": true,
        "flags": Object {},
        "ids": 1,
        "io": Manager {
          "_callbacks": Object {
            "$close": Array [
              [Function],
            ],
            "$open": Array [
              [Function],
            ],
            "$packet": Array [
              [Function],
            ],
          },
          "_randomizationFactor": 0.5,
          "_reconnection": true,
          "_reconnectionAttempts": Infinity,
          "_reconnectionDelay": 1000,
          "_reconnectionDelayMax": 5000,
          "_timeout": 20000,
          "autoConnect": true,
          "backoff": Backoff {
            "attempts": 0,
            "factor": 2,
            "jitter": 0.5,
            "max": 5000,
            "ms": 1000,
          },
          "connecting": Array [
            [Circular],
          ],
          "decoder": Decoder {
            "reconstructor": null,
          },
          "encoder": Encoder {},
          "encoding": false,
          "engine": Socket {
            "_callbacks": Object {
              "$error": Array [
                [Function],
              ],
              "$open": Array [
                [Function],
              ],
            },
            "agent": false,
            "binaryType": null,
            "ca": null,
            "cert": null,
            "ciphers": null,
            "enablesXDR": false,
            "forceBase64": false,
            "forceJSONP": false,
            "forceNode": false,
            "hostname": "localhost",
            "id": null,
            "isReactNative": false,
            "jsonp": true,
            "key": null,
            "onlyBinaryUpgrades": undefined,
            "passphrase": null,
            "path": "/socket.io/",
            "perMessageDeflate": Object {
              "threshold": 1024,
            },
            "pfx": null,
            "pingInterval": null,
            "pingIntervalTimer": null,
            "pingTimeout": null,
            "pingTimeoutTimer": null,
            "policyPort": 843,
            "port": "80",
            "prevBufferLen": 0,
            "query": Object {
              "draftId": "",
            },
            "readyState": "opening",
            "rejectUnauthorized": true,
            "rememberUpgrade": false,
            "secure": false,
            "timestampParam": "t",
            "timestampRequests": undefined,
            "transport": XHR {
              "_callbacks": Object {
                "$close": Array [
                  [Function],
                ],
                "$drain": Array [
                  [Function],
                ],
                "$error": Array [
                  [Function],
                ],
                "$packet": Array [
                  [Function],
                ],
              },
              "agent": false,
              "ca": null,
              "cert": null,
              "ciphers": null,
              "enablesXDR": false,
              "extraHeaders": undefined,
              "forceNode": false,
              "hostname": "localhost",
              "isReactNative": false,
              "key": null,
              "localAddress": undefined,
              "passphrase": null,
              "path": "/socket.io/",
              "pfx": null,
              "pollXhr": Request {
                "_callbacks": Object {
                  "$data": Array [
                    [Function],
                  ],
                  "$error": Array [
                    [Function],
                  ],
                },
                "agent": false,
                "async": true,
                "ca": null,
                "cert": null,
                "ciphers": null,
                "data": null,
                "enablesXDR": false,
                "extraHeaders": undefined,
                "index": 0,
                "isBinary": undefined,
                "key": null,
                "method": "GET",
                "passphrase": null,
                "pfx": null,
                "rejectUnauthorized": true,
                "requestTimeout": undefined,
                "supportsBinary": false,
                "uri": "http://localhost/socket.io/?draftId=&EIO=3&transport=polling&t=MbeszI0&b64=1",
                "xd": true,
                "xhr": XMLHttpRequest {
                  "DONE": 4,
                  "HEADERS_RECEIVED": 2,
                  "LOADING": 3,
                  "OPENED": 1,
                  "UNSENT": 0,
                  "abort": [Function],
                  "addEventListener": [Function],
                  "dispatchEvent": [Function],
                  "getAllResponseHeaders": [Function],
                  "getRequestHeader": [Function],
                  "getResponseHeader": [Function],
                  "handleError": [Function],
                  "onreadystatechange": [Function],
                  "open": [Function],
                  "readyState": 1,
                  "removeEventListener": [Function],
                  "responseText": "",
                  "responseXML": "",
                  "send": [Function],
                  "setDisableHeaderCheck": [Function],
                  "setRequestHeader": [Function],
                  "status": null,
                  "statusText": null,
                },
                "xs": false,
              },
              "polling": true,
              "port": "80",
              "query": Object {
                "EIO": 3,
                "b64": 1,
                "draftId": "",
                "t": "MbeszI0",
                "transport": "polling",
              },
              "readyState": "opening",
              "rejectUnauthorized": true,
              "requestTimeout": undefined,
              "secure": false,
              "socket": [Circular],
              "supportsBinary": false,
              "timestampParam": "t",
              "timestampRequests": undefined,
              "xd": true,
              "xs": false,
            },
            "transportOptions": Object {},
            "transports": Array [
              "polling",
              "websocket",
            ],
            "upgrade": true,
            "upgrades": null,
            "writeBuffer": Array [],
          },
          "lastPing": null,
          "nsps": Object {
            "/": [Circular],
          },
          "opts": Object {
            "hostname": "localhost",
            "path": "/socket.io",
            "port": "80",
            "query": Object {
              "draftId": "",
            },
            "secure": false,
          },
          "packetBuffer": Array [],
          "readyState": "opening",
          "skipReconnect": false,
          "subs": Array [
            Object {
              "destroy": [Function],
            },
            Object {
              "destroy": [Function],
            },
            Object {
              "destroy": [Function],
            },
          ],
          "uri": "http://localhost",
        },
        "json": [Circular],
        "nsp": "/",
        "query": Object {
          "draftId": "",
        },
        "receiveBuffer": Array [],
        "sendBuffer": Array [
          Object {
            "data": Array [
              "join",
              Object {
                "name": "myname1111111111111",
              },
            ],
            "id": 0,
            "options": Object {
              "compress": true,
            },
            "type": 2,
          },
        ],
        "subs": Array [
          Object {
            "destroy": [Function],
          },
          Object {
            "destroy": [Function],
          },
          Object {
            "destroy": [Function],
          },
        ],
      }
    }
  />
</div>
`;
